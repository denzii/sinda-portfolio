@import "./_mixins";
@import "./_variables";

header {
	position: fixed;
  	top:0;
  	z-index: 1;

  	width: 100%;
  	padding-bottom: 15px;

  	/*neumorphism effects*/
  	border-radius: 0px 0px 13px 13px;
  	background: linear-gradient( neumorphDegree(upper-left-lightsource), #ffffff, #e6e6e6);
  	box-shadow:  8px 10px 16px #636363, 4px -2px 16px #666666;  

	// @include tabletMediaQuery{
		 // padding-left: 4vw;
    	// padding-right: 5vw;
	// }
	
	@include centreSpacedFlexContainerRules(flex);

	h3{
		a{
			@include anchorNavigationRules(null, small-caps);
		}
	}

  	#desktop-nav {
    	/* needed so the li elems will have space between them (this requires container to be bigger) */
    	width: 575px;
    	height: inherit;
		
		@include mobileMediaQuery {
			display: none;
		}

		menu {
			all: unset;
			height: inherit;

			/* align the inner DOM element containing the list of navigation anchors */
			@include centreSpacedFlexContainerRules(flex);
			
			/*for some reason nav menu was misaligned with the h3 on the left, quick and dirty hack*/
			padding-top: 2.5px; 

			li {
				list-style-type: none;
			}

			h4 {
				a {
					@include anchorNavigationRules(uppercase);
				}
			}
		} 
  	}

	#mobile-nav {
		@include centreSpacedFlexContainerRules(none);
		flex-wrap: nowrap;
		flex-direction: row-reverse;
		
		@include mobileMediaQuery {
			display: flex;
		}

		#mobile-menu-button {
			cursor:pointer;
			font-size: 1.9em;
			color: black;
			padding-top: 10px;
			border: none;
			background-color: inherit;
		} 

		menu {
			width: 10em;
			height: 100%;
			
			/* for mobile viewports, push navbar elements from the center to the sides 
 			&& change width of mobile menu so it will be indented in
 			is there a better way to achive it through flexbox without playing with width or media q? */
			@include mobileMediaQuery {
				width: 100%;
			}

			/* for low end viewports,
 			change width of mobile menu so it will be displayed properly
 			is there a better way to achive it through flexbox without playing with width or media q? */
			@include lowEndMediaQuery {
				padding-right: 2em;
			}

			@include centreSpacedFlexContainerRules(flex);
			flex-direction: column;

			position:relative;
			padding-right: 8em;

			li {
				text-align: center;
				height: 2.5em;
				list-style-type: none;
			}

			h4{
				a{
					@include anchorNavigationRules(uppercase);
				}
			}
		}
	}
}


/* for tablet-ish viewports, push navbar elements from the center to the sides */
// @media only screen and (max-width: 1280px){
//   header {
    // padding-left: 4vw;
    // padding-right: 5vw;
//   }
// }

/* for mobile viewports, push navbar elements from the center to the sides 
 && change width of mobile menu so it will be indented in
 is there a better way to achive it through flexbox without playing with width or media q? */
//  @media only screen and (max-width: 800px) {
//   header #desktop-nav {
//     display: none;
//   }
//   header #mobile-nav {
//     display: flex;
//   }
//   header #mobile-nav menu {
//     width: 100%;
//   }  
// }

/* for low end viewports,
 change width of mobile menu so it will be displayed properly
 is there a better way to achive it through flexbox without playing with width or media q? */
//  @media only screen and (max-width: 485px) {
//   header #mobile-nav menu {
//     padding-right: 2em;
//   }  
// }
